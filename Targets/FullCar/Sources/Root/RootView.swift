//
//  RootView.swift
//  FullCar
//
//  Created by ÌïúÏÉÅÏßÑ on 12/2/23.
//  Copyright ¬© 2023 com.fullcar. All rights reserved.
//

import SwiftUI
import FullCarUI
import FullCarKit
import Firebase
import Observation
import Dependencies
import KakaoSDKAuth
import KakaoSDKCommon

@MainActor
@Observable
final class RootViewModel {
    @ObservationIgnored @Dependency(\.accountService) private var account

    var appState: FullCar.State = FullCar.shared.appState

    // ÏûêÎèôÎ°úÍ∑∏Ïù∏ ÏãúÎèÑ
    // Î°úÏª¨ Ïä§ÌÜ†Î¶¨ÏßÄÏóê ÌÜ†ÌÅ∞ ÏûàÎäîÏßÄ Í≤ÄÏÇ¨Ìï¥ÏÑú, Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨ÌïòÍ≥†
    // ÌôàÏúºÎ°ú Ïù¥ÎèôÌï†Í±∞Í≥†
    // ÌÜ†ÌÅ∞Ïù¥ ÏóÜÏúºÎ©¥ Î°úÍ∑∏Ïù∏ ÌôîÎ©¥ÏúºÎ°ú
    func onFirstTask() async {
        do {
            let isValidToken = try await account.hasValidToken()
            appState = isValidToken ? .tab : .login

            #if DEBUG
            print("[‚úÖ][RootView.swift] -> ÏûêÎèô Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ!")
            #endif
        } catch {
            appState = .login

            #if DEBUG
            print("[üÜò][RootView.swift] -> ÏûêÎèô Î°úÍ∑∏Ïù∏ Ïã§Ìå® : \(error)")
            #endif
        }
    }

    func setupFirebase() async {
        FirebaseApp.configure()
    }
    
    func setupKakaoSDK() async {
        guard let kakaoNativeAppKey = Bundle.main.kakaoNativeAppKey else { return }
        KakaoSDK.initSDK(appKey: kakaoNativeAppKey)
    }

    func handleKakaoURL(_ url: URL) {
        if (AuthApi.isKakaoTalkLoginUrl(url)) {
            _ = AuthController.handleOpenUrl(url: url)
        }
    }
}

struct RootView: View {
    let viewModel: RootViewModel
    
    var body: some View {
        bodyView
            .onOpenURL { url in
                viewModel.handleKakaoURL(url)
            }
            .onFirstTask {
                await viewModel.setupFirebase()
                await viewModel.setupKakaoSDK()
                await viewModel.onFirstTask()
            }
    }
    
    @MainActor
    @ViewBuilder
    private var bodyView: some View {
        switch viewModel.appState {
        case .root:
            Color.red
//            Image("Îü∞ÏπòÏä§ÌÅ¨Î¶∞ Ïù¥ÎØ∏ÏßÄ ÎÇòÏò§Î©¥!", bundle: .main)
                
        case .login:
//            LoginView(
//                viewModel: withDependencies({
//                    $0.accountService = .testValue
//                }, operation: {
//                    LoginViewModel()
//                })
//            )
            LoginView(viewModel: .init())
        case .tab:
            FullCarTabView(viewModel: .init())
        }
    }
}

#Preview {
    RootView(viewModel: .init())
}
